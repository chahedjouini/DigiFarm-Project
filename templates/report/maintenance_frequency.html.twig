{% extends 'base_back_etude.html.twig' %}

{% block title %}Maintenance Frequency{% endblock %}

{% block stylesheets %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
{% endblock %}

{% block body %}
<div class="container mt-4">
  <div class="container mt-4 pt-5">
        <h1 class="text-center text-primary mb-4">Maintenance</h1>
        <div class="card shadow-lg p-4">
          <h1>Maintenance Frequency</h1>
    <div>
        <select id="chartType" class="form-select mb-3">
            <option value="bar">Bar Chart</option>
            <option value="line">Line Chart</option>
            <option value="pie">Pie Chart</option>
        </select>
    </div>
    <canvas id="maintenanceFrequencyChart" width="400" height="200"></canvas>

    <script>
    const ctx = document.getElementById('maintenanceFrequencyChart').getContext('2d');
    const backgroundColors = [
        'rgba(255, 99, 132, 0.2)', // Red
        'rgba(54, 162, 235, 0.2)', // Blue
        'rgba(255, 206, 86, 0.2)', // Yellow
        'rgba(75, 192, 192, 0.2)', // Green
        'rgba(153, 102, 255, 0.2)', // Purple
        'rgba(255, 159, 64, 0.2)' // Orange
    ];

    const borderColors = [
        'rgba(255, 99, 132, 1)', // Red
        'rgba(54, 162, 235, 1)', // Blue
        'rgba(255, 206, 86, 1)', // Yellow
        'rgba(75, 192, 192, 1)', // Green
        'rgba(153, 102, 255, 1)', // Purple
        'rgba(255, 159, 64, 1)' // Orange
    ];

    const labels = {{ data|map(d => d.nom)|json_encode|raw }};
    const dataValues = {{ data|map(d => d.maintenance_count)|json_encode|raw }};
    const data = {
        labels: labels,
        datasets: [{
            label: 'Maintenance Frequency',
            data: dataValues,
            backgroundColor: backgroundColors.slice(0, labels.length), // Use only the required colors
            borderColor: borderColors.slice(0, labels.length), // Use only the required colors
            borderWidth: 1
        }]
    };

    const options = {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    };

    let chart = new Chart(ctx, {
        type: 'bar', // Default chart type
        data: data,
        options: options
    });

    // Handle dropdown menu change
    document.getElementById('chartType').addEventListener('change', (event) => {
        const chartType = event.target.value;
        chart.destroy(); // Destroy the existing chart
        chart = new Chart(ctx, {
            type: chartType,
            data: data,
            options: options
        });
    });
    </script>
    </div>
  </div>
</div>
{% endblock %}